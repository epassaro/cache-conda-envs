name: Unit tests
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        # compiler: [gcc-9, gcc-10, clang-10, clang-11, clang-12]
        compiler: [gcc-10]
        prefix: /usr/share/miniconda3/envs/my-env
      fail-fast: false

    name: ${{ matrix.compiler }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: my-env
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: linux-64-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n my-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Build libnomp
        id: build_libnomp
        run: |
          echo "NOMP_INSTALL_DIR=${PWD}/install" >> $GITHUB_ENV
          mkdir -p ${BUILDDIR}
          cd ${BUILDDIR}
          cmake -DCMAKE_INSTALL_PREFIX=../install \
            -DOpenCL_LIBRARY=${CONDA_PREFIX}/lib/libOpenCL.so \
            -DOpenCL_INCLUDE_DIR=${CONDA_PREFIX}/include ..
          make install
      - name: Run libnomp tests
        id: run_libnomp
        run: |
          cd ${TESTDIR}
          ./run-tests.sh
      - name: Block to allow inspecting failures
        run: sleep 30m
        if: ${{ failure() && inputs.debug_enabled }}
